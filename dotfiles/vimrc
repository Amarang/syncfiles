
"Formatting
syntax on
if &term=~'linux' 
    set background=light
else
    "if has("gui_running")
    set background=light
    set t_Co=256
endif
set nu!

" Color scheme
" ! mkdir -p ~/.vim/colors && cd ~/.vim/colors && wget -O wombat256mod.vim http://www.vim.org/scripts/download_script.php?src_id=13400
set t_Co=256
color wombat256mod


" Type kj to get out of insert mode!
inoremap kj <Esc>

" control jikl (akin to wasd) will switch panes
nnoremap <C-j> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-i> <C-w>k
nnoremap <C-k> <C-w>j


let mapleader = ","
map <Leader>vi :tabe ~/.vimrc<CR>
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tk :tabclose<cr>
map <leader>tm :tabnext<cr>
map <leader>ww :w!<cr>
map <leader>qq :wq<cr>

" indent file
map <Leader>i mmgg=G`m

" ==========================================
" sets off header with =, /, or #, like this
" ==========================================
nnoremap <leader>h= yyPVr=jyypVr=
nnoremap <leader>h/ yyPVr/jyypVr/
nnoremap <leader>h# yyPVr#jyypVr#

"format paragraph to 80 chars
nnoremap <leader>pf gqap


" o and O will put newlines below and above cursor
nnoremap o m`o<esc>``
nnoremap O m`O<esc>``


set shortmess=atI
set backspace=indent,eol,start
set hidden


" my preferred date format as an abbreviation
iab xdate <c-r>=strftime("%I:%M%p\ \%a\ %b\ %d,\ %Y")<cr>


" get rid of stupid Thanks for flying Vim title
set title 
set titleold="" 
set titlestring=VIM:\ %F 

" backspace compatibility
set bs=2

"turn on wild menu for tab command completion
set wildmenu

" turn ruler on to show position
set ruler



" install pathogen: https://github.com/tpope/vim-pathogen
" install NERDtree: https://github.com/scrooloose/nerdtree
" install syntastic: https://github.com/scrooloose/syntastic

execute pathogen#infect()

"NERDTREE stuff
map <C-n> :NERDTreeToggle<CR>



" abbreviations for misspellings
abbr hte the
abbr teh the

set scrolloff=5 " keep at least 5 lines visible on either side of cursor

set noerrorbells visualbell t_vb=

" Quickly set comma or semicolon at the end of the string
inoremap ,, <End>,
inoremap ;; <End>;

set ttyfast

" Don't redraw while executing macros (good performance config)
set lazyredraw

set cursorline          " highlight current line
set incsearch           " search as characters are entered
filetype indent on      " load FileType-specific indent files

" ENABLE USE OF MOUSE (SCROLL, SELECT, CURSOR PLACEMENT)
" in visual mode only (=a for all)
set mouse=v

" shift hjkl over to jkl; and switch up and down
noremap l <down>
noremap k <up>
noremap ; <right>
noremap j <left>

" map space to : to speed things up
nnoremap <Space> :

" Alt+l,k to drag lines up and down through putty
nnoremap l :m+<CR>==
nnoremap k :m-2<CR>==
inoremap l <Esc>:m+<CR>==gi
inoremap k <Esc>:m-2<CR>==gi
vnoremap l :m'>+<CR>gv=gv
vnoremap k :m-2<CR>gv=gv

"remap VIM 0 to first non-blank character
map 0 ^

" show the status line always
set laststatus=2


" format of statusline
set statusline=
set statusline=%t       "tail of the filename
set statusline+=%h      "help file flag
set statusline+=\ %#error# " START ERROR COLOR
set statusline+=%m      "modified flaga
set statusline+=%r      "read only flags
set statusline+=%*      " END COLORR
set statusline+=\ %y      "filetype
set statusline+=\ \[%{strftime('%I:%M%p\ \%a\ %b\ %d,\ %Y')}\]
set statusline+=\ %{getcwd()}
set statusline+=%=      "left/right separator
" set statusline+=%{synIDattr(synID(line('.'),col('.'),1),'name')}\  " highlight
set statusline+=%c,     "cursor column
set statusline+=%l/%L   "cursor line/total lines
set statusline+=\ %P    "percent through file
" set statusline+=%=%-14.(%l,%c%V%)\ %p%%


" spell
map <F5> :setlocal spell! spelllang=en_us<CR>

" nnoremap <Enter> o<Esc>

"Sets F2 to enable and disable line numeration
nnoremap <F2> :set nonumber!<CR>:set nornu<CR>:set foldcolumn=0<CR>
nnoremap <F3> :set tabstop=2<CR>:set shiftwidth=2<CR>:set softtabstop=2<CR>
nnoremap <F4> :set tabstop=4<CR>:set shiftwidth=4<CR>:set softtabstop=4<CR>

" F12 toggles formatting so you can paste without
" screwing up formatting of contents.
set pastetoggle=<F12>

" this is why I made a group for autocommands:
" http://stackoverflow.com/questions/15353988/progressively-slower-reloading-time-of-vimrc
augroup Group1
    autocmd!
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif " close vim if only nerdtree is left

    au BufNewFile,BufRead *.{p,gp} setlocal ft=gnuplot
    " F6 executes gnuplot, python, C, C++ code by compiling and running
    au BufEnter,BufNew *.{gp,p} map <buffer> <F6> <ESC> :w <kEnter> :!gnuplot % <kEnter>
    autocmd FileType python nnoremap <F6> :w <bar> exec '!python '.shellescape('%')<CR>
    autocmd FileType c nnoremap <F6> :w <bar> exec '!gcc '.shellescape('%').' -o '.shellescape('%:r').'.exe && ./'.shellescape('%:r') . '.exe'<CR>
    autocmd FileType cpp nnoremap <F6> :w <bar> exec '!g++ '.shellescape('%').' -o '.shellescape('%:r').'.exe && ./'.shellescape('%:r') . '.exe'<CR>
    " put printf template into code if using c++ and type PF in insert mode
    autocmd FileType cpp inoremap PF printf("\n",);<Esc>=0f\i

    autocmd BufWritePost .vimrc source %


    if exists("+relativenumber")
        set rnu | set nu
        au InsertEnter * :set nornu | set number
        au InsertLeave * :set relativenumber
    endif

augroup END

set autochdir

"escape to clear highlighting

set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab

"Set title of window to file name
set title

if has("autocmd")
    filetype plugin indent on
else
    set autoindent
endif

set showmatch
set matchtime=3
set incsearch
set hlsearch
"Ignores case for searches
set ignorecase
"case-sensitive if search contains an uppercase character
set smartcase


"Remember previous buffer session
exec 'set viminfo=%,' . &viminfo


set noswapfile


:hi MatchParen cterm=none ctermbg=black ctermfg=white


