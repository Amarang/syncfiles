# .bashrc

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

if [ "$TERM" != "dumb" ]; then
	dircolors -b 1>/dev/null 2>/dev/null
	if (( $? == 0 )); then
		alias ls='ls --color=auto'
	else
		alias ls='ls -G'
	fi
fi

# set window title to user@host:pwd
echo -ne "\033]0;${USER}@`hostname`:`pwd`\007"

# C0='\[\033[0m\]'  # Reset
# C1='\[\033[30m\]' # Black


TERM=xterm-256color
# Example: [23:35:56] [amin.nj@elara] ~/syncfiles/dotfiles > 
PS="\[\033[01;34m\][\t]\[\e[0m\] \[\033[02;34m\][\u@\h]\[\e[0m\] \w"
if [ -n "$WINDOW" ]; then
    PS+=" \[\033[01;34m\][${WINDOW}]\[\e[0m\]"
fi
# PS+=" > "
# PS+=" \[\033[01;32m\]$C1â–¶$C0 "
PS+=" \[\033[01;32m\]> "
# bad=" \[\033[01;31m\]> "
# stat="if [ \$? = 0 ]; then echo \"${good}\"; else echo \"${bad}\"; fi"
# PS+="\`${stat}\`"
PS+="\[\e[0m\]"
export PS1=$PS




export EDITOR=vim

# User specific aliases and functions
alias ll='ls -l'
alias me11='ssh cscme11@emume11'
alias me42='ssh cscme42@emu42fastprod01'
alias sx5='ssh cscsx5@emusx501'
alias me11nick='ssh emume11'
alias afswork='cd /afs/cern.ch/work/n/namin/public/'
alias me11env='cd /home/cscme11/'
#alias less='less -N'
#alias less='view -c "nnoremap q :q<CR>" '
alias grep='grep -rn --color=auto'
alias cls='clear'
alias back='cd $OLDPWD'
alias bk='cd $OLDPWD'
alias ..='cd ..'
alias ...='cd ../..'
alias gridui='source /afs/cern.ch/cms/LCG/LCG-2/UI/cms_ui_env.sh'
#alias root='root.exe -l'
alias ,,='echo "$PWD -> $OLDPWD" && cd $OLDPWD'
alias cd..='cd ..'
alias bc='bc -l'
alias gridtick='grid-proxy-init -debug -verify'
alias vomstick='voms-proxy-init -voms cms'
alias crabscript='source /afs/cern.ch/cms/ccs/wm/scripts/Crab/crab.sh'
alias e='echo'
alias v='vim'
alias vrc='vim ~/.vimrc'
alias fnal='kinit -A -f namin@FNAL.GOV; ssh -2 namin@cmslpc-sl5.fnal.gov'
alias lxplus5='ssh namin@lxplus5.cern.ch'
alias lxplus='ssh namin@lxplus.cern.ch'
alias brazos='ssh amin.nj@hurr.tamu.edu'
alias hurr='ssh amin.nj@hurr.tamu.edu'
alias oldschool='ssh amin.nj@oldschool.tamu.edu'
alias io='ssh amin.nj@io.physics.tamu.edu'
alias tree='tree -C'
alias femto='pico'
alias milli='pico'
alias centi='pico'
alias micro='pico'
alias stats='~/syncfiles/pyfiles/stats.py'

export HISTFILESIZE=500000
export HISTSIZE=100000

#PYTHONPATH="${PYTHONPATH}:`echo $HOME`/syncfiles/pydir"
#export PYTHONPATH
#PATH="${PATH}:`echo $HOME`/syncfiles/pydir"
#export PATH

if [ "$(uname -o 2>/dev/null)" = "Cygwin" ]; then
    alias python='/cygdrive/c/Python27/python.exe -i'
    alias desktop='cd /cygdrive/c/Users/Nick/Desktop'
    function say() { mplayer -really-quiet "http://translate.google.com/translate_tts?tl=en&q=$*"; }

    # start Xwin first
    export DISPLAY=:0.0

    alias python0=`which python`
    # run date practice utility
    # python0 ~/syncfiles/pyfiles/major.py

fi

function ggg() {
    name=$1
    base=`echo $name | cut -d "." -f 1`
    extension=`echo $name | cut -d "." -f 2`
    cppexts=" cpp cc c++ "
    cexts=" c "
    compiler=""
    [[ $cppexts =~ " ${extension} " ]] && compiler=g++
    [[ $cexts =~ " ${extension} " ]] && compiler=gcc
    echo "Since your extension was ${extension}, we'll use ${compiler} to compile"
    echo "Issuing command: $compiler $name -o ${base}.exe && ./${base}.exe"
    $compiler $name -o ${base}.exe && ./${base}.exe
}
export -f ggg

# Paths=()
# 
# function p {
# 
#     if [ -z "$1" ]; then
#         Paths=( "${Paths[@]}" $(readlink -f .) )
#         echo "Added ${#Paths[@]} => $(readlink -f .)"
#     fi
# 
#     if [ -n "$1" ]; then
# 
#         if [ "$1" == "list" ] || [ "$1" == "ls" ] || [ "$1" == "all" ]; then
#             aLen=${#Paths[@]}
#             for (( i=0; i<${aLen}; i++ ));
#             do
#                 echo "$i => ${Paths[$i]}"
#             done
# 
#         else
# 
#             echo "cd: $1 => ${Paths[$1]}"
#             cd ${Paths[$1]} 
#         fi
# 
#     fi
# 
# }

usingCrab=false
function crabenv {
    echo ">> source /afs/cern.ch/cms/LCG/LCG-2/UI/cms_ui_env.sh"
    source '/afs/cern.ch/cms/LCG/LCG-2/UI/cms_ui_env.sh'
    echo ">> cmsenv"
    cmsenv
    echo ">> source /afs/cern.ch/cms/ccs/wm/scripts/Crab/crab.sh"
    source '/afs/cern.ch/cms/ccs/wm/scripts/Crab/crab.sh'
    echo ">> usingCrab is true"
    usingCrab=true

}

function ccreate {
    if $usingCrab; then
        crab -create -cfg $1
    else
        echo "Do crabenv first!"
    fi
}

function cands {

    if $usingCrab; then 

        cfg=$1
        foldername=`cat ${cfg} | grep ui_working_dir | cut -d "=" -f 2 | tr -d " "`

        crab -create -cfg ${cfg}
        crab -submit -c ${foldername}
    else
        echo "Do crabenv first!"
    fi


}


function csub {

    if $usingCrab; then 

        foldername=$1
        if [[ $1 =~ .*cfg ]]
        then
            foldername=`cat $1 | grep ui_working_dir | cut -d "=" -f 2 | tr -d " "`
        fi

        crab -submit -c ${foldername}
    else
        echo "Do crabenv first!"
    fi


}


function cstat {
    if $usingCrab; then
        crab -status -c $1
    else
        echo "Do crabenv first!"
    fi
}

function cget {
    if $usingCrab; then
        crab -getoutput -c $1
    else
        echo "Do crabenv first!"
    fi
}


function screens {
    COUNTER=0
    for i in `screen -ls | egrep -n ".*Detached.*" | awk '{print $2}' | cut -f1 -d '.'`; do
        (( COUNTER++ ))
        echo $COUNTER "=>" $i
        #echo $1

        if [ $# -gt 0 ]; then
            #echo $#
            if [ "$1" -eq "$COUNTER" ]; then
                #echo this screen
                screen -r $i
            fi

        fi

    done
}

